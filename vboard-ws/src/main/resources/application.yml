application:
  name: ${project.artifactId}
  version: ${project.version}
  buildDate: ${buildDate}

logging:
  level:
    root: ${ROOT_LOG_LEVEL:INFO}
    org.springframework.web: ${SPRING_LOG_LEVEL:INFO}
    com.vsct.vboard:
      config.cognito.*: ${AWS_COGNITO_AUTH_LOG_LEVEL:INFO}
      controllers.*: ${CONTROLLERS_LOG_LEVEL:INFO}
      services.ElasticSearchClient: ${ELS_LOG_LEVEL:INFO}

aws-cognito:
  enabled: ${AWS_COGNITO_ENABLED:false}
  jwt-http-header-name: ${AWS_COGNITO_JWT_HTTP_HEADER_NAME:X-AMZN-OIDC-DATA}
  region: ${AWS_COGNITO_REGION:eu-west-1}
  roles-field-name: ${AWS_COGNITO_ROLES_FIELDNAME:custom:roles}

server:
  error:
    whitelabel:
      enabled: ${ENABLE_WHITELABEL_ERRORS:false}
endpoints: # by default disable and protect all actuator endpoints
  enabled: false
  sensitive: true

spring:
  jackson:
    property-naming-strategy: CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES
  jpa:
    hibernate:
      dialect: org.hibernate.dialect.MySQL5Dialect
      ddl-auto: update
      # Possible values:
      # - none: do nothing
      # - validate: validate the schema, makes no changes to the database
      # - update: update the DB schema (add columns, never removes them) based on the code Entities
      # - create: creates the DB schema, destroying previous data
      # - create-drop: drop the schema when the SessionFactory is closed explicitly, typically when the application is stopped
  datasource:
    url: jdbc:mysql://${VBOARD_DB_HOST}/${MYSQL_DATABASE}
    username: ${MYSQL_USER}
    password: ${MYSQL_ROOT_PASSWORD}
    testOnBorrow: true
    validationQuery: SELECT 1
elasticsearch:
  serverUri: ${VBOARD_ELASTICSEARCH_HOST}
  pinsIndex: ${VBOARD_ELASTICSEARCH_INDEX}
  querySize: 50

com:
  vsct:
    vboard:
      hostname: ${VBOARD_HOSTNAME}
uploads:
  imagesStorageDirectory: ${VBOARD_IMAGES_DIRECTORY}
  blogImagesDirectory: ${VBOARD_WORDPRESS_IMAGES_DIRECTORY}
  multiplePinsPerUrlAllowed: ${VBOARD_ALLOW_MULTIPLE_PINS_PER_URL:false}
emails:
  hostname: ${MAIL_HOST}
  port: 25
  sender: ${MAIL_SENDER}
administrators:
  emails: ${ADMINS}

keycloak:
  # The very next property is important to avoid Keycloak auto-configuration to kick-in:
  # cf. https://github.com/keycloak/keycloak/blob/master/adapters/oidc/spring-boot2/src/main/java/org/keycloak/adapters/springboot/KeycloakAutoConfiguration.java#L46
  enabled: ${KCK_ENABLED:false}
  realm: ${KCK_REALM}
  realm-key: ${KCK_REALM_KEY}
  ssl-required: none
  resource: vboard-ws
  bearer-only: true
  auth-server-url: http://${KCK_PUBLIC_HOST}/auth
